<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.briup.apps.poll.dao.extend.QuestionVMMapper">

	<resultMap type="com.briup.apps.poll.bean.extend.QuestionVM" id="questionVM">
		<id property="id" column="id" javaType="Long" />
		<result property="name" column="name" javaType="String" />
		<result property="questionType" column="questionType" javaType="String" />
		<collection property="options" column="id" select="selectOptionsByQid" ofType="com.briup.apps.poll.bean.Options"></collection>
	</resultMap>
	
	<resultMap type="com.briup.apps.poll.bean.Options" id="optionsVM">
		<result property="questionId" column="question_id" />
	</resultMap>

	<select id="selectAllQuestionVM" resultMap="questionVM">
		select * from poll_question
	</select>
	
	<select id="selectQuestionVMById" parameterType="long" resultMap="questionVM">
		select * from poll_question where id = #{id}
	</select>
	
	<select id="selectOptionsByQid" parameterType="long" resultMap="optionsVM">
		select * from poll_options where question_id = #{id}
	</select>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.briup.apps.poll.bean.extend.QuestionVM">
		insert into  poll_question (name, questionType) values (#{name}, #{questionType})
	</insert>
	
	<update id="update" parameterType="com.briup.apps.poll.bean.extend.QuestionVM">
		update poll_question set
		name = #{name},
		questionType = #{questionType}
		where id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="long">
		delete from poll_question where id = #{id}
	</delete>
	
	<select id="selectLikeKeyword" parameterType="String" resultMap="questionVM">
		select * from poll_question where name like concat('%',#{keyword},'%') union
		select q.* from poll_question as q left join poll_options as o on q.id = o.question_id where o.name like concat('%',#{keyword},'%')
	</select>
	
	<select id="selectQuestionVMByQuestionnaireId" parameterType="long" resultMap="questionVM">
		select * from poll_question as qu
		join poll_qq as qq on qu.id = qq.question_id
		where qq.questionnaire_id = #{questionnaireId};
	</select>

</mapper>